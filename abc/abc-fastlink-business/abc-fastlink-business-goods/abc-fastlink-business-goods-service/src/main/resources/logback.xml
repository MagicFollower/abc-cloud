<?xml version="1.0" encoding="UTF-8" ?>

<configuration scan="true" scanPeriod="10 seconds">
    <!--日志文件主目录：这里${user.home}为当前服务器用户主目录-->
    <property name="LOG_PATH" value="${user.home}/logs/abc-fastlink-business-goods"/>
    <property name="MODULE_NAME" value="test模块名"/>
    <!-- ERROR级别日志 -->
    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 RollingFileAppender-->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_PATH}/${MODULE_NAME}_error.log</File>
        <!-- 过滤器，只记录WARN级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志输出位置  可相对、和绝对路径 -->
            <fileNamePattern>${LOG_PATH}/${MODULE_NAME}-error-%d{yyyyMMdd}.log.%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 这里的%X{traceId}通过MDC设置traceId的值 -->
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{_traceId}] [%thread] %-5level %logger{36} -%msg%n
            </Pattern>
        </encoder>
    </appender>

    <!--    &lt;!&ndash; DEBUG级别日志 appender &ndash;&gt;-->
    <!--    <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--        <File>${LOG_PATH}/${MODULE_NAME}_debug.log</File>-->
    <!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--            <fileNamePattern>${LOG_PATH}/${MODULE_NAME}-debug-%d{yyyyMMdd}.log.%i</fileNamePattern>-->
    <!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
    <!--                <maxFileSize>500MB</maxFileSize>-->
    <!--            </timeBasedFileNamingAndTriggeringPolicy>-->
    <!--        </rollingPolicy>-->
    <!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
    <!--            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{traceId}] [%thread] %-5level %logger{36} -%msg%n-->
    <!--            </Pattern>-->
    <!--        </encoder>-->
    <!--    </appender>-->

    <!-- INFO级别日志 appender -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_PATH}/${MODULE_NAME}_info.log</File>
        <!-- 过滤器，只记录INFO级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${MODULE_NAME}-info-%d{yyyyMMdd}.log.%i</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{_traceId}] [%thread] %-5level %logger{36} -%msg%n
            </Pattern>
        </encoder>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder charset="{log.charset}">
            <Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{_traceId}] [%thread] %-5level %logger{36} -%msg%n
            </Pattern>
        </encoder>
    </appender>

    <!-- 记录ERROR、INFO日志到文件 -->
    <!-- 输出所有日志（大于等于root_level） -->
    <root level="INFO">
        <appender-ref ref="INFO"/>
        <appender-ref ref="ERROR"/>
        <appender-ref ref="STDOUT"/>
    </root>

</configuration>
